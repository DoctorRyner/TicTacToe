//Класс для реализации всех вырисовывающихся фигур, которые 
//имеют различные свойства и методы для перемещения вырисовывания на экране
//И прикрепления текста

class Figures {
public: //Переменные для хранения
	int fchars; //Цветов символов
	int fbacks; //Цветов фонов символов
	int xmin; //Минимальной координаты по оси x
	int xmax; //Максмиальной координаты по оси x
	int ymin; //Минимальной координаты по оси y
	int ymax; //Максмиальной координаты по оси y
	char text[200]; //Текста на фигуре
	int tc; //Цвета символов текста на фигуре
	int tb; //Цвета фона символов на фигуре
	int offsetX; //Смещения по x для перемещения фигур
	int offsetY; //Смещения по y для перемещения фигур
	bool selected = false; //Состояния помеченности фигуры
	int by = 0; //Принадлежности к, чем-либо
	//Метод для добавления или изменения текста, с возможностью смещения,
	//который имеет параметры по умолчанию для него
	void add_text(char *txt, int o, int t, int xx = 0, int yy = 0) { //Метод для добавления текста
		strcpy(text, txt); //Копирует переданный текст в переменную хранения текста
		tc = o; //Запоминает переданный цвет символов текста
		tb = t; //Запоминает переданный цвет фона символов текста 
		offsetX = xx; //Запоминает смещение для перемещения текста по оси x
		offsetY = yy; //Запоминает смещение для перемещения текста по оси y
	}
	void dtext() { //Метод для вырисовывания текста на фигуре 
		move(ymin + offsetY, xmin + offsetX); //Перемещает курсор на начало фигуры со смещением
		ccolor(tc, tb); //Устанавлиает цвет текста и фона запомненный в свойствах фигуры
		printw("%s", text); //Выводим текст на экран
	}
	void trecolor(int ch, int bg) { //Метод для изменения цвета и фона текста 
		tc = ch; //Изменение цвета символа текста
		tb = bg; //Изменение цвета фона символа текста
	}
	void recolor(int ch, int bg) { //Метод для изменение цвета фигуры
		fchars = ch; //Изменение цвета символа
		fbacks = bg; //Изменение цвета фона символа
	}

	void redraw() { //Метод для вырисовывания фигуры и текста на ней 
		int one = color->chars; //Переменная для последней настройки цвета 
		int two = color->backs; //Переменная для последней настройки фона цвета
		ccolor(fchars, fbacks); //Установка режима цвета фигуры
		for(int i=ymin; i<ymax; i++) //Цикл для вырисовывания фигуры по ее минимальным
			for(int j=xmin; j<xmax; j++) { //и максимальным координатам по оси x и y
				move(i, j); //Перемещение курсора 
				printw(" "); //Пустое пространство цвета фигуры
			}
		dtext(); //Вырисовывания текста на фигуре
		ccolor(one, two); //Возврат предыдущей настройки цвета
	}
	void moving(int dx, int dy) { //Метод для перемещения фигуры по окну
		//Ограничения по перемещению в... 
		//Вверх
		if(dy > 0) { 
			if(ymax <= c.y) {
				if(ymax + dy <= c.y) {
					ymin += dy;
					ymax += dy;
				}
				else {
					ymin = ymax - ymin;
					ymax = c.y;
					ymin = ymax - ymin;
				}
			}
		}
		//Вниз
		else {
			if(ymin >= 0) {
				if(ymin + dy >= 0) {
					ymin += dy;
					ymax += dy;
				}
				else {
					ymax = ymax - ymin;
					ymin = 0;
					ymax = ymax - ymin;
				}
			}
		}
		//Влево
		if(dx > 0) {
			if(xmax <= c.x) {
				if(xmax + dx <= c.x) {
					xmin += dx;
					xmax += dx;
				}
				else {
					xmin = xmax - xmin;
					xmax = c.x;
					xmin = xmax - xmin;
				}
			}
		}
		//Вправо
		else {
			if(xmin >= 0) {
				if(xmin + dx >= 0) {
					xmin += dx;
					xmax += dx;
				}
				else {
					xmax = xmax - xmin;
					xmin = 0;
					xmax = xmax - xmin;
				}
			}
		}
	}
	void zero() { //Метод для обнуления главных свойств фигуры
		cube(0, 0); //Меняет форму на безформенность
		toe.winner = 0; //Обнуляет победителя 			 }
		toe.f1 = 0; //Обнуляет переменную для проверки 1  )>> относится к классу ttt  
		toe.f2 = 0; //Обнуляет переменную для проверки 2 }
		toe.f3 = 0; //Обнуляет переменную для проверки 3 }
		by = 0; //Обнуляет свойство принадлежности фигуры 
		selected = false; //Обнуляет состояние выбранности фигуры
		strcpy(text, ""); //Обнуляет текст фигуры 
	}
	void cube(int lenght, int width) { //Метод для создания прямоугольной формы фигуры
		fchars = color->chars; //Запоминает настройки цвета символов
		fbacks = color->backs; //Запоминает настройки цвета фона символов
		xmin = 0; //Устанавливает начальные координаты фигуры с переданой шириной и высотой
		xmax = lenght;
		ymin = 0;
		ymax = width;
	}
}*f; //Указатель для динамического выделения необходимого кол-ва фигур
